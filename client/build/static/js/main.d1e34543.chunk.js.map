{"version":3,"sources":["components/StyleFlex.jsx","screens/navbar/index.jsx","components/ProfileImage.jsx","state/index.js","screens/homepage/index.jsx","utils/notification/Notification.js","utils/validation/Validation.js","screens/loginpage/Login.jsx","screens/loginpage/index.jsx","screens/registerpage/Register.jsx","screens/registerpage/index.jsx","App.js","index.js"],"names":["StyleFlex","styled","Box","display","justifyContent","alignItems","Navbar","navigate","useNavigate","_jsx","padding","marginTop","backgroundColor","children","gap","Typography","fontWeight","fontSize","color","paddingTop","marginLeft","onClick","sx","cursor","ProfileImage","_ref","avatar","_ref$size","size","width","height","style","objectFit","borderRadius","alt","src","authenticate","createSlice","name","initialState","user","token","posts","reducers","setLogin","state","action","payload","setLogout","setPosts","setPost","updatedPosts","map","post","_id","_authenticate$actions","actions","HomePage","isNonMobileScreens","useMediaQuery","_useSelector","useSelector","fname","lname","email","mobile","dispatch","useDispatch","isNonMobile","_jsxs","bgcolor","paddingLeft","flexBasis","undefined","mt","gridTemplateColumns","gridColumn","className","TextField","type","id","placeholder","value","disabled","paddingRight","showErrMsg","msg","showSuccessMsg","isEmpty","isEmail","test","isLength","password","length","isMatch","cf_password","emailOrusername","err","success","Login","_useState","useState","_useState2","_slicedToArray","setUser","handleChangeInput","e","_objectSpread2","_e$target","target","_objectSpread","_defineProperty","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","abrupt","axios","then","res","loggedIn","data","t0","response","stop","_x","apply","arguments","onSubmit","onChange","required","Link","to","textDecoration","textAlign","fontStyle","LoginPage","backgroundImage","p","marginBottom","m","Register","picture","_useState3","_useState4","image","setImage","_useState5","_useState6","setData","changeAvatar","alert","_ref2","_callee2","file","formData2","_context2","FormData","append","headers","sent","url","_x2","PasswordChecklist","rules","minLength","messages","number","capital","Dropzone","acceptedFiles","multiple","onDrop","_ref3","getRootProps","getInputProps","border","EditOutlined","IconButton","DeleteOutlined","RegisterPage","App","isAuth","Boolean","BrowserRouter","Routes","Route","path","exact","element","Navigate","persistConfig","key","storage","version","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","createRoot","document","getElementById","render","Provider","PersistGate","loading","persistor","persistStore"],"mappings":"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","file":"static/js/main.d1e34543.chunk.js","sourcesContent":["import { styled } from \"@mui/system\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst StyleFlex = styled(Box)({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n});\r\n\r\nexport default StyleFlex;\r\n","import {Typography} from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport StyleFlex from \"../../components/StyleFlex\";\r\n\r\nconst Navbar = () => {\r\n    const navigate = useNavigate();\r\n    const appName = \"Simply Booking\";\r\n    \r\n    return (\r\n    <StyleFlex padding=\"1rem 6%\" marginTop=\"-1%\"  backgroundColor={\"#5e5e5e\"}>\r\n      <StyleFlex gap=\"1.75rem\">\r\n        <Typography\r\n          fontWeight=\"bold\"\r\n          fontSize=\"clamp(2rem, 2rem, 2.25rem)\"\r\n          color=\"lightgreen\"\r\n          paddingTop=\"0.5rem\"\r\n          marginLeft=\"-2rem\"\r\n          onClick={() => navigate(\"/profile\")}\r\n          sx={{\r\n            \"&:hover\": {\r\n              color: \"white\",\r\n              cursor: \"pointer\",\r\n            },\r\n          }}\r\n        >\r\n          {appName}\r\n          </Typography>\r\n       </StyleFlex>    \r\n    </StyleFlex>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import { Box } from \"@mui/material\";\r\n\r\nconst ProfileImage = ({ avatar,size = \"120px\" }) => {\r\n  return (\r\n    <Box width={size} height={size}>\r\n      <img\r\n        style={{ objectFit: \"cover\", borderRadius: \"50%\"}}\r\n        width={size}\r\n        height={size}\r\n        alt=\"user\"\r\n        src={avatar}  \r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProfileImage;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  posts: [],\r\n};\r\n\r\nexport const authenticate = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        setLogin: (state, action) => {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n        },\r\n        setLogout: (state) => {\r\n        state.user = null;\r\n        state.token = null;\r\n        },\r\n        setPosts: (state, action) => {\r\n        state.posts = action.payload.posts;\r\n       },\r\n        setPost: (state, action) => {\r\n        const updatedPosts = state.posts.map((post) => {\r\n        if (post._id === action.payload.post._id) return action.payload.post;\r\n         return post;\r\n        });\r\n        state.posts = updatedPosts;\r\n      },\r\n    }\r\n});\r\n\r\nexport const {setLogin,setLogout,setPost,setPosts } = authenticate.actions;\r\nexport default authenticate.reducer;","import { Box, useMediaQuery,TextField } from \"@mui/material\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport Navbar from \"screens/navbar\";\r\n// import  MyPostWidget  from \"screens/widgets/MyPostWidget\";\r\n// import PostsWidget from \"screens/widgets/PostsWidget\";\r\nimport ProfileImage from \"components/ProfileImage\";\r\nimport { setLogout } from \"state\";\r\n\r\n\r\nconst HomePage = () => {\r\n  const isNonMobileScreens = useMediaQuery(\"(min-width:1000px)\");\r\n  const {fname,lname,email,mobile, avatar } = useSelector((state) => state.user);\r\n  const logo = \"https://res.cloudinary.com/dl99x/image/upload/v1674659975/attachment_86137168_nttz7u.png\";\r\n  const dispatch = useDispatch();\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n  \r\n  return (\r\n    <Box>\r\n      <Navbar />\r\n      <Box\r\n        width=\"100%\"\r\n        padding=\"2rem 0%\"\r\n        display={isNonMobileScreens ? \"flex\" : \"block\"}\r\n        gap=\"0.5rem\"\r\n        justifyContent=\"space-between\"\r\n        bgcolor={\"#f0f2f5\"}\r\n      >\r\n      <Box\r\n        paddingLeft=\"3%\"\r\n        paddingTop=\"3%\"\r\n        >\r\n        <img\r\n        style={{ objectFit: \"cover\", borderRadius: \"20%\" }}\r\n        width= \"180px\"\r\n        height= \"180px\"\r\n        alt=\"logo\"\r\n        src={logo}\r\n      />\r\n      </Box>\r\n       <Box\r\n          flexBasis={isNonMobileScreens ? \"42%\" : undefined}\r\n          mt={isNonMobileScreens ? undefined : \"2rem\"}\r\n          \r\n        >\r\n           <Box\r\n            display=\"grid\"\r\n            gap=\"30px\"\r\n            gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n            sx={{\r\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n            }}\r\n           ></Box>\r\n          <h1 className=\"Hfontreg\">Your Profile</h1>\r\n          <label className=\"t-form-label\">First Name </label>\r\n            <TextField \r\n                type=\"text\"\r\n                className=\"inp-fields\"\r\n                id=\"fname\"\r\n                placeholder=\"Enter First Name\"\r\n                value={fname}\r\n                name=\"fname\"\r\n                disabled\r\n             />\r\n              <br></br><br></br>\r\n               \r\n               <label className=\"t-form-label\">Last Name </label>\r\n            <TextField \r\n                type=\"text\"\r\n                className=\"inp-fields\"\r\n                id=\"lname\"\r\n                placeholder=\"Enter Last Name\"\r\n                value={lname}\r\n                name=\"lname\"\r\n                disabled\r\n               \r\n             />\r\n              <br></br><br></br>\r\n              \r\n               <label className=\"t-form-label\">Email </label>\r\n            <TextField\r\n                type=\"email\"\r\n                className=\"inp-fields\"\r\n                id=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                name=\"email\"\r\n                disabled\r\n          />\r\n          <br></br><br></br>\r\n             \r\n              <label className=\"t-form-label\">Mobile Number </label>\r\n              <TextField\r\n                type=\"text\"\r\n                className=\"inp-fields\"\r\n                id=\"mobile\"\r\n                placeholder=\"Enter mobile number \"\r\n                value={mobile}\r\n                name=\"mobile\"\r\n                disabled\r\n              />\r\n        </Box>\r\n        <Box\r\n          paddingRight=\"9%\"\r\n          alignItems=\"center\"\r\n          paddingTop=\"3%\"\r\n        >\r\n          <h3>Profile Picture</h3>\r\n          <ProfileImage avatar={avatar} />\r\n\r\n          <button\r\n            style={{\r\n              color: \"white\",\r\n              backgroundColor: \"black\",\r\n              borderRadius: \"10px\",\r\n              padding: \"0.5rem 1rem\",\r\n              fontSize: \"1.2rem\",\r\n              fontWeight: \"bold\",\r\n              marginTop: \"1rem\"\r\n            }}\r\n            onClick={() => dispatch(setLogout())}>\r\n            Log Out\r\n          </button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport \"./notification.css\";\r\n\r\nexport const showErrMsg = (msg) => {\r\n  return <div className=\"errMsg\">{msg}</div>;\r\n};\r\n\r\nexport const showSuccessMsg = (msg) => {\r\n  return <div className=\"successMsg\">{msg}</div>;\r\n};\r\n","export const isEmpty = value => {\r\n    if(!value) return true\r\n    return false\r\n}\r\n\r\nexport const isEmail = email => {\r\n    \r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\nexport const isLength = password => {\r\n    if(password.length < 8) return true\r\n    return false\r\n}\r\n\r\nexport const isMatch = (password, cf_password) => {\r\n    if(password === cf_password) return true\r\n    return false\r\n}","import \"../../CSS/userFunction.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate,Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { showErrMsg, showSuccessMsg } from \"../../utils/notification/Notification\";\r\nimport { isEmpty } from \"../../utils/validation/Validation.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setLogin } from \"../../state\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\n\r\n\r\nconst initialState = {\r\n  emailOrusername: \"\",\r\n  password: \"\",\r\n  err: \"\",\r\n  success: \"\",\r\n};\r\n \r\nfunction Login() {\r\n  const [user, setUser] = useState(initialState);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { emailOrusername,password, err, success } = user;\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n  const handleChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value, err: \"\", success: \"\" });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    //Validations\r\n    if (\r\n      isEmpty(emailOrusername) ||\r\n      isEmpty(password)\r\n    )\r\n      return setUser({\r\n        ...user,\r\n        err: \"Please fill in all fields!\",\r\n        success: \"\",\r\n      });\r\n\r\n    try {\r\n       await axios.post(\"auth/login\", {\r\n        emailOrusername,\r\n        password\r\n        \r\n      }).then((res) => {\r\n        navigate(\"/profile\");\r\n        const loggedIn = res.data; \r\n          \r\n    dispatch(\r\n        setLogin({\r\n         user: loggedIn.user, \r\n         token: loggedIn.token,\r\n        })\r\n    );\r\n    setUser({ ...user, err: \"\", success: res.data.msg });\r\n    });       \r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n      setUser({ ...user, err: err.response.data.msg, success: \"\" });\r\n    }\r\n  };\r\n   \r\n\r\n  return (\r\n    <div>\r\n        <h1 className=\"Hfontreg\">LOGIN HERE</h1>\r\n        <div>\r\n          {err && showErrMsg(err)}\r\n          {success && showSuccessMsg(success)}\r\n          <br></br>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <Box\r\n            display=\"grid\"\r\n            gap=\"30px\"\r\n            gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n            sx={{\r\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n            }}\r\n           ></Box>\r\n               <label className=\"t-form-label\">Email </label>\r\n            <TextField\r\n                type=\"text\"\r\n                className=\"inp-fields\"\r\n                id=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={emailOrusername}\r\n                name=\"emailOrusername\"\r\n                onChange={handleChangeInput}\r\n                required\r\n          />         \r\n              <br></br><br></br>\r\n                <label className=\"t-form-label\">Password </label>\r\n              <TextField\r\n                type=\"password\"\r\n                className=\"inp-fields\"\r\n                id=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                name=\"password\"\r\n                onChange={handleChangeInput}\r\n                required\r\n              />\r\n          <br></br><br></br><br></br>\r\n          <br></br>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn-register\"\r\n              style={{\r\n                width: \"140px\",\r\n                fontWeight: \"bold\",\r\n                borderRadius: \"12px\",\r\n              }}\r\n            >\r\n              Login\r\n        </button>\r\n           <br></br> <br></br><br></br>\r\n            &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\r\n            &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;\r\n        <Link to=\"/register\" style={{\r\n          textDecoration: `underline`, textAlign: `center`,\r\n          fontStyle: `italic`, color: `#6b5c06`, fontSize: `20px`, fontWeight: `bold`\r\n        }}>\r\n          Don't Have an Account? Signup Here...\r\n        </Link>\r\n                  \r\n          </form>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import { Box, Typography, useMediaQuery } from \"@mui/material\";\r\nimport Login from \"./Login\";\r\nimport \"../../CSS/userFunction.css\";\r\n\r\nconst LoginPage = () => {\r\n  const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\r\n \r\n  return (\r\n    <Box>   \r\n    <div style={{ \r\n      backgroundImage: `url(\"https://res.cloudinary.com/dl99x/image/upload/v1674660093/social-media-icon-light-background_169963-225_cmri3n.jpg\")` \r\n    }}>\r\n      <Box\r\n        width=\"20%\"\r\n        p=\"1rem 6%\"\r\n        textAlign=\"left\"\r\n        marginTop={isNonMobileScreens ? \"0%\" : \"2rem\"}\r\n        marginBottom={isNonMobileScreens ? \"5%\" : \"2rem\"}\r\n      >\r\n        <Typography fontWeight=\"bold\" fontSize=\"30px\" color=\"green\">\r\n        Simply Booking\r\n        </Typography>\r\n      </Box>\r\n      <div style={{ display: \"flex\" }}>\r\n      <Box\r\n        width={isNonMobileScreens ? \"40%\" : \"70%\"}\r\n        p=\"2rem\"\r\n        m=\"2rem auto\"\r\n        borderRadius=\"1.5rem\"\r\n        backgroundColor={\"#b4b7bb\"}\r\n        marginLeft={isNonMobileScreens ? \"10%\" : \"0\"}\r\n        marginTop={isNonMobileScreens ? \"-1%\" : \"2rem\"}\r\n        height={isNonMobileScreens ? \"auto\" : \"auto\"}\r\n        marginBottom={isNonMobileScreens ? \"15%\" : \"2rem\"}\r\n      >\r\n        <Login />\r\n      </Box>\r\n      <Box\r\n        width={isNonMobileScreens ? \"28%\" : \"43%\"}\r\n        paddingLeft=\"1rem\"\r\n        paddingRight=\"1rem\"\r\n        paddingTop=\"7rem\" \r\n        marginTop=\"-12%\"    \r\n        backgroundColor={\"white\"}\r\n        >\r\n       <br></br>  <br></br> <br></br>\r\n          <h1>Dr. Perry</h1>\r\n          <label className=\"t-form-label-box\">Your Trusted Doctor </label>\r\n           <br></br>  <br></br> <br></br>\r\n          <h1>Book your appointment </h1>\r\n            <br></br> <h1>simply and easily</h1>\r\n       </Box>\r\n        </div></div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import \"../../CSS/userFunction.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate,Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { showErrMsg, showSuccessMsg } from \"../../utils/notification/Notification\";\r\nimport { isEmpty, isEmail, isLength,isMatch } from \"../../utils/validation/Validation.js\";\r\nimport PasswordChecklist from \"react-password-checklist\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  useMediaQuery,\r\n  Typography,\r\n  IconButton\r\n} from \"@mui/material\";\r\n\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined\r\n} from \"@mui/icons-material\";\r\n\r\nimport StyleFlex from \"components/StyleFlex\";\r\nimport Dropzone from \"react-dropzone\";\r\nconst initialState = {\r\n  fname: \"\",\r\n  lname: \"\",\r\n  email: \"\",\r\n  mobile: \"\",\r\n  password: \"\",\r\n  cf_password: \"\",\r\n  avatar:\"\",\r\n  err: \"\",\r\n  success: \"\",\r\n};\r\n\r\n\r\nfunction Register() {\r\n  const [user, setUser] = useState(initialState);\r\n  const navigate = useNavigate();\r\n  let picture=\"\";\r\n  const { fname,lname, email, mobile, password, cf_password, err, success } =user;\r\n  const isNonMobile = useMediaQuery(\"(min-width:600px)\");\r\n  const [image, setImage] = useState(null);\r\n  const [data, setData] = useState(initialState);\r\n  const handleChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value, err: \"\", success: \"\" });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (image) {\r\n      await changeAvatar();  \r\n    }\r\n    if(picture===\"\"){\r\n      picture=\"https://res.cloudinary.com/dl99x/image/upload/v1665520140/avatar_cugq40_osziik.png\"\r\n    }\r\n    //Validations\r\n    if (\r\n      isEmpty(fname) ||\r\n      isEmpty(lname) ||\r\n      isEmpty(email) ||\r\n      isEmpty(mobile) ||\r\n      isEmpty(password)\r\n    )\r\n      return setUser({\r\n        ...user,\r\n        err: \"Please fill in all fields!\",\r\n        success: \"\",\r\n      });\r\n\r\n    if (!isEmail(email))\r\n      return setUser({ ...user, err: \"Invalid email type!\", success: \"\" });\r\n\r\n    if (isLength(password))\r\n      return setUser({\r\n        ...user,\r\n        err: \"Password must have at least 8 characters!\",\r\n        success: \"\",\r\n      });\r\n\r\n    if (!isMatch(password, cf_password))\r\n      return setUser({ ...user, err: \"Password and confirm password not matched!\", success: \"\" });\r\n    try {\r\n       await axios.post(\"/auth/register\", {\r\n        fname,\r\n        lname,\r\n        email,\r\n        mobile,\r\n        password,\r\n        avatar:picture\r\n       }, \r\n       ).then((res) => {\r\n      alert(\"Account Created Successfully\");\r\n       navigate(\"/\");\r\n       setUser({ ...user, err: \"\", success: res.data.msg });\r\n      });\r\n    \r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        setUser({ ...user, err: err.response.data.msg, success: \"\" });\r\n    }\r\n  };\r\n\r\n  const changeAvatar = async (e) => {\r\n    try {\r\n      const file = image;\r\n     \r\n      if (!file) \r\n        return setData({\r\n          ...data,\r\n          err:\"No files were uploaded.\",\r\n          success: \"\",\r\n        });\r\n       \r\n              \r\n      if (file.size > 1024 * 1024)\r\n        return setData({ ...data, err: \"Size too large.\", success: \"\" });\r\n        \r\n      if (file.type !== \"image/jpeg\" && file.type !== \"image/png\")\r\n        return setData({\r\n          ...data,\r\n          err:\"Please upload a JPEG or PNG file.\",\r\n          success: \"\",  \r\n        });\r\n\r\n      let formData2 = new FormData();\r\n      formData2.append(\"file\", file);\r\n\r\n     //upload image to cloudinary\r\n      const res = await axios.post(\"/images/upload\", formData2, {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\"      \r\n        },\r\n        \r\n      });\r\n      picture = res.data.url;\r\n\r\n    } catch (err) {\r\n      setData({ ...data, err: err.response.data.msg, success: \"\" });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h1 className=\"Hfontreg\">SIGNUP HERE</h1>\r\n        <div>\r\n          {err && showErrMsg(err)}\r\n          {success && showSuccessMsg(success)}\r\n          <br></br>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <Box\r\n            display=\"grid\"\r\n            gap=\"30px\"\r\n            gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n            sx={{\r\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\" },\r\n            }}\r\n           ></Box>\r\n          <label className=\"t-form-label2\">* </label>\r\n          <label className=\"t-form-label\">First Name </label>\r\n            <TextField \r\n                type=\"text\"\r\n                className=\"inp-fields\"\r\n                id=\"fname\"\r\n                placeholder=\"Enter First Name\"\r\n                value={fname}\r\n                name=\"fname\"\r\n                onChange={handleChangeInput}\r\n                required\r\n             />\r\n              <br></br><br></br>\r\n              <label className=\"t-form-label2\">* </label>\r\n               <label className=\"t-form-label\">Last Name </label>\r\n            <TextField \r\n                type=\"text\"\r\n                className=\"inp-fields\"\r\n                id=\"lname\"\r\n                placeholder=\"Enter Last Name\"\r\n                value={lname}\r\n                name=\"lname\"\r\n                onChange={handleChangeInput}\r\n                required\r\n             />\r\n              <br></br><br></br>\r\n              <label className=\"t-form-label2\">* </label>\r\n               <label className=\"t-form-label\">Email </label>\r\n            <TextField\r\n                type=\"email\"\r\n                className=\"inp-fields\"\r\n                id=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                name=\"email\"\r\n                onChange={handleChangeInput}\r\n                required\r\n          />\r\n          <br></br><br></br>\r\n              <label className=\"t-form-label2\">* </label>\r\n              <label className=\"t-form-label\">Mobile Number </label>\r\n              <TextField\r\n                type=\"text\"\r\n                className=\"inp-fields\"\r\n                id=\"mobile\"\r\n                placeholder=\"Enter mobile number \"\r\n                value={mobile}\r\n                name=\"mobile\"\r\n                onChange={handleChangeInput}\r\n                required\r\n              />\r\n            \r\n              <br></br><br></br>\r\n                <label className=\"t-form-label2\">* </label>\r\n                <label className=\"t-form-label\">Password </label>\r\n              <TextField\r\n                type=\"password\"\r\n                className=\"inp-fields\"\r\n                id=\"password\"\r\n                placeholder=\"Enter Password\"\r\n                value={password}\r\n                name=\"password\"\r\n                onChange={handleChangeInput}\r\n                required\r\n              />\r\n          \r\n            <div className=\"pwd-checklist\">\r\n              <PasswordChecklist\r\n                rules={[\"minLength\", \"number\", \"capital\"]}\r\n                minLength={8}\r\n                value={password}\r\n                messages={{\r\n                  minLength: \"At least 8 characters.\",\r\n                  number: \"Minimum One Numeric Value.\",\r\n                  capital: \"Minimum One Uppercase Letter.\",\r\n                }}\r\n              />\r\n              <p>\r\n                Your password must contain at least one numeric value and\r\n                <br></br>one uppercase letter with minimum 8 characters.\r\n                </p>\r\n               </div>\r\n\r\n                <label className=\"t-form-label2\">* </label>\r\n                <label className=\"t-form-label\">Confirm Password </label>\r\n              <TextField\r\n                type=\"password\"\r\n                className=\"inp-fields\"\r\n                id=\"cf_password\"\r\n                placeholder=\"Confirm Password\"\r\n                value={cf_password}\r\n                name=\"cf_password\"\r\n                onChange={handleChangeInput}\r\n                required\r\n              />\r\n               <br></br><br></br><br></br>\r\n          <label className=\"t-form-label\">Profile Picture </label>\r\n           <Dropzone\r\n            acceptedFiles=\".jpg,.jpeg,.png\"\r\n            multiple={false}\r\n            onDrop={(acceptedFiles) =>setImage(acceptedFiles[0])}\r\n          >\r\n            {({ getRootProps, getInputProps }) => (\r\n              <StyleFlex>\r\n                <Box\r\n                  {...getRootProps()}\r\n                  border={`2px dashed`}\r\n                  p=\"1rem\"\r\n                  width=\"100%\"\r\n                  sx={{ \"&:hover\": { cursor: \"pointer\" } }}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  {!image ? (\r\n                    <p>Add Image Here</p>\r\n                  ) : (\r\n                    <StyleFlex>\r\n                      <Typography>{image.name}</Typography>\r\n                      <EditOutlined />\r\n                    </StyleFlex>\r\n                  )}\r\n                </Box>\r\n                {image && (\r\n                  <IconButton\r\n                    onClick={() => setImage(null)}\r\n                    sx={{ width: \"15%\" }}\r\n                  >\r\n                    <DeleteOutlined />\r\n                  </IconButton>\r\n                )}\r\n              </StyleFlex>\r\n            )}\r\n          </Dropzone>\r\n           <p></p>\r\n            <label className=\"t-form-label3\">\r\n              All fields with * are required.\r\n            </label>{\" \"}\r\n          <br></br> <br></br>\r\n          \r\n          <br></br>\r\n\r\n           <button\r\n              type=\"submit\"\r\n              className=\"btn-register\"\r\n              style={{\r\n                width: \"140px\",\r\n                fontWeight: \"bold\",\r\n                borderRadius: \"12px\",\r\n              }}\r\n            >\r\n              Register\r\n            </button>\r\n        </form>\r\n        <br></br> <br></br>\r\n         &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;\r\n        <Link to=\"/\" style={{\r\n          textDecoration: `underline`, textAlign: `center`,\r\n          fontStyle: `italic`, color: `#6b5c06`, fontSize: `20px`, fontWeight: `bold`\r\n        }}>\r\n         \r\n          Already Have an Account? Login Here...\r\n        </Link>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\nexport default Register;\r\n","import { Box, Typography, useMediaQuery } from \"@mui/material\";\r\nimport Register from \"./Register\";\r\nimport \"../../CSS/userFunction.css\";\r\n\r\nconst RegisterPage = () => {\r\n  const isNonMobileScreens = useMediaQuery(\"(min-width: 1000px)\");\r\n\r\n  return (\r\n    <Box>   \r\n    <div style={{ \r\n      backgroundImage: `url(\"https://res.cloudinary.com/dl99x/image/upload/v1674660093/social-media-icon-light-background_169963-225_cmri3n.jpg\")` \r\n    }}>\r\n      <Box\r\n        width=\"20%\"\r\n       \r\n        p=\"1rem 6%\"\r\n        textAlign=\"left\"\r\n        marginTop={isNonMobileScreens ? \"0%\" : \"2rem\"}\r\n      >\r\n        <Typography fontWeight=\"bold\" fontSize=\"32px\" color=\"green\">\r\n          Simply Booking\r\n        </Typography>\r\n      </Box>\r\n      <div style={{ display: \"flex\" }}>\r\n      <Box\r\n        width={isNonMobileScreens ? \"40%\" : \"70%\"}\r\n        p=\"2rem\"\r\n        m=\"2rem auto\"\r\n        borderRadius=\"1.5rem\"\r\n        backgroundColor={\"#b4b7bb\"}\r\n        marginLeft={isNonMobileScreens ? \"10%\" : \"0\"}\r\n        marginTop={isNonMobileScreens ? \"-1%\" : \"2rem\"}\r\n        height={isNonMobileScreens ? \"auto\" : \"auto\"}\r\n      >\r\n        <Register />\r\n      </Box>\r\n      <Box\r\n        width={isNonMobileScreens ? \"28%\" : \"43%\"}\r\n        paddingLeft=\"2rem\"\r\n        paddingRight=\"2rem\"\r\n        paddingTop=\"6rem\" \r\n        marginTop=\"-7%\"    \r\n        backgroundColor={\"white\"}\r\n        >\r\n       <br></br>  <br></br> <br></br>\r\n       <h1>Dr. Perry</h1>\r\n          <label className=\"t-form-label-box\">Your Trusted Doctor </label>\r\n           <br></br>  <br></br> <br></br>\r\n          <h1>Book your appointment </h1>\r\n            <br></br> <h1>simply and easily</h1>\r\n       </Box>\r\n        </div></div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import { BrowserRouter, Navigate, Routes, Route } from \"react-router-dom\";\r\nimport HomePage from \"./screens/homepage\";\r\nimport LoginPage from \"./screens/loginpage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Register from \"./screens/registerpage\";\r\n\r\nfunction App() {\r\n  const isAuth = Boolean(useSelector((state) => state.token));\r\n  return (\r\n    <div className=\"app\">  \r\n      <BrowserRouter>\r\n        <Routes>\r\n            <Route path=\"/\" exact element={<LoginPage />} />\r\n            <Route path=\"/register\" exact element={<Register />} />\r\n            <Route path=\"/profile\"  element={isAuth ? <HomePage /> : <Navigate to=\"/\" />} />\r\n        </Routes>\r\n     </BrowserRouter>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport authReducer from \"./state\";\r\nimport { Provider } from \"react-redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst persistConfig = { key: \"root\", storage, version: 1 };\r\nconst persistedReducer = persistReducer(persistConfig, authReducer);\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  //<React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistStore(store)}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  //</React.StrictMode>\r\n);\r\n\r\n\r\n"],"sourceRoot":""}